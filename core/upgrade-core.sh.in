#!/bin/sh
#
###############################################################################
#
# Upgrade Zenoss Core
#
###############################################################################
set -e
export SERVICE_TENANT_ID="`serviced service list core --format='{{.ID}}'`"
export UPGRADE_REINDEX
export REMOVE_EMPTY_PRODUCT_CLASS_RELATIONSHIPS
export MIGRATE_MARIADB_SERVICES
serviced snapshot untag $SERVICE_TENANT_ID preupgrade-core-%VERSION%

FROM_VERSION=$(serviced service list core --format='{{.Version}}')
TO_VERSION=%VERSION%

if [ -z "$FROM_VERSION" ];
then
    FROM_VERSION=$(serviced service list core --format '{{.ImageID}}' | awk '{ print "localhost:5000/"$0" cat /opt/zenoss/Products/ZenModel/ZVersion.py" }' | xargs docker run --rm | grep VERSION | cut -d'"' -f2)
fi

if [ -z "$FROM_VERSION" ];
then
    FROM_VERSION=$(grep 'SVC_USE zenoss/resmgr_[^:_]*:.*' /root/%SHORT_VERSION%.x/current_version.txt | cut -d':' -f2 | cut -d'_' -f1)
    if [ -z "$FROM_VERSION" ];
    then
        echo "Could not get the previous Core version number from serviced, please edit current_version.txt to set it."
        echo "Change this line 'SVC_USE zenoss/core_REPLACE_1' to reflect the pre-upgrade version, for example:"
        echo "SVC_USE zenoss/core_5.2:5.2.6_1"
        exit 1
    else
        echo "Using FROM_VERSION provided by change to current_version.txt"
    fi
fi

FROM_VERSION_SHORT=$(cut -d'.' -f1,2 <<< $FROM_VERSION)
sed -i 's/REPLACE/'"$FROM_VERSION_SHORT:$FROM_VERSION"'/g' /root/%SHORT_VERSION%.x/current_version.txt
sed -i "s/%FROM_VERSION%/$FROM_VERSION/g" /root/%SHORT_VERSION%.x/current_version.txt
serviced script run /root/%SHORT_VERSION%.x/current_version.txt --service Zenoss.core

if [ $(echo "${FROM_VERSION}" | cut -c1) -eq 5 ] && [ $(echo "${TO_VERSION}" | cut -c1) -eq 6 ];
then
    UPGRADE_REINDEX='SVC_EXEC NO_COMMIT "Zenoss.core/Zenoss/User Interface/Zope" su - zenoss -c "/opt/zenoss/bin/upgrade_reindex.sh Zenoss.core"'
    REMOVE_EMPTY_PRODUCT_CLASS_RELATIONSHIPS='SVC_EXEC NO_COMMIT "Zenoss.core/Zenoss/User Interface/Zope" /opt/zenoss/bin/zenmigrate --step=RemoveEmptyProductClassRelationships --dont-bump'
fi

# Run mariadb migration in case we upgrade from older than 6.4.0
MARIADB_MIGRATION="6.4.0"
if [ $(echo -e "$FROM_VERSION\n$MARIADB_MIGRATION" | sort -V | head -1) == $FROM_VERSION ] && [ $FROM_VERSION != $MARIADB_MIGRATION ];
then

MIGRATE_MARIADB_SERVICES="SVC_STOP Zenoss.core/Infrastructure/mariadb\\
SVC_WAIT Zenoss.resmgr/Infrastructure/mariadb stopped 600\\
SVC_USE %MARIADB_TAG% zenoss/core_6.0 zenoss/core_6.1 zenoss/core_6.2 zenoss/core_6.3 zenoss/core_6.4 service Zenoss.core/Infrastructure/mariadb\\
SVC_EXEC NO_COMMIT 'Zenoss.core/Infrastructure/mariadb' /bin/bash -c 'chown -R mysql:mysql /var/lib/mysql; mysqld_safe \& until mysqladmin ping 2>/dev/null; do echo \"Waiting for mysql...\"; sleep 1; done \&\& mysql_upgrade'\\

fi


sed -i "s@%UPGRADE_REINDEX%@${UPGRADE_REINDEX}@g; s@%REMOVE_EMPTY_PRODUCT_CLASS_RELATIONSHIPS%@${REMOVE_EMPTY_PRODUCT_CLASS_RELATIONSHIPS}@g; s@%MIGRATE_MARIADB_SERVICES%@${MIGRATE_MARIADB_SERVICES}@g;" /root/%SHORT_VERSION%.x/upgrade-core.txt

serviced script run /root/%SHORT_VERSION%.x/upgrade-core.txt --service Zenoss.core
/opt/serviced/bin/serviced-set-version Zenoss.core %VERSION%
