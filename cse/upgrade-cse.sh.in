#!/bin/bash
#
###############################################################################
#
# Upgrade Zenoss Resource Manager
#
###############################################################################

export SERVICE_TENANT_ID=$(serviced service list Zenoss.cse --format='{{.ID}}')

if serviced snapshot list -t | grep preupgrade-cse-%VERSION%; then
      serviced snapshot untag $SERVICE_TENANT_ID preupgrade-cse-%VERSION%
fi

echo "Getting FROM_VERSION from the 'Version' setting."
FROM_VERSION=$(serviced service list Zenoss.cse --format='{{.Version}}')
TO_VERSION=%VERSION%

if [ -z "$FROM_VERSION" ]; then
      echo "Getting FROM_VERSION from the 'ImageID' setting."
      FROM_VERSION=$(serviced service list Zenoss.cse --format '{{.ImageID}}' | awk '{ print "localhost:5000/"$0" cat /opt/zenoss/Products/ZenModel/ZVersion.py" }' | xargs docker run --rm | grep VERSION | cut -d'"' -f2)
fi

if [ -z "$FROM_VERSION" ]; then
      echo "Could not get the previous RM version number from serviced, "
      echo "Change this line 'SVC_USE zenoss/cse_REPLACE_1' to reflect the pre-upgrade version, for example:"
      echo "SVC_USE zenoss/cse_5.2:5.2.6_1"
      exit 1
fi

MARIADB_IMAGE_ID=$(serviced service list mariadb-model --format "{{.ImageID}}")
echo "mariadb-model service's image ID is "${MARIADB_IMAGE_ID}

# Run mariadb migration if the mariadb-model service's image ID does not correspond to the mariadb image.
if [[ ! $MARIADB_IMAGE_ID =~ "${SERVICE_TENANT_ID}/mariadb:" ]]; then
MIGRATE_MARIADB_SERVICES="SVC_USE gcr.io/zing-registry-188222/mariadb:%VERSION%_%VERSION_TAG% zenoss/cse_7.0 service Zenoss.cse/Infrastructure/mariadb-model\\
SVC_USE gcr.io/zing-registry-188222/mariadb:%VERSION%_%VERSION_TAG% zenoss/cse_7.0 service Zenoss.cse/Infrastructure/mariadb-events"
fi

sed -i "s@%MIGRATE_MARIADB_SERVICES%@${MIGRATE_MARIADB_SERVICES}@g;" /root/%SHORT_VERSION%.x/upgrade-cse.txt

UPGRADE_IMPACT_VERSION="5.5.3.0.0"
CURRENT_IMPACT_VERSION=$(serviced service shell Infrastructure/Impact /bin/bash -c 'cat /opt/zenoss_impact/image_version | cut -d ":" -f2 | cut -d "_" -f1')
RUN_GRAPH_UPDATE=false

if [ "$(printf '%s\n' "$UPGRADE_IMPACT_VERSION" "$CURRENT_IMPACT_VERSION" | sort -V | head -n1)" = "$UPGRADE_IMPACT_VERSION" ]; then
    echo "Skipping Impact upgrade. Current version greater than or equal to $UPGRADE_IMPACT_VERSION"
else
    UPGRADE_IMPACT_SERVICE="SVC_USE gcr.io/zing-registry-188222/impact_5.5:$UPGRADE_IMPACT_VERSION impact_5.5"
fi

sed -i "s@%UPGRADE_IMPACT_SERVICE%@${UPGRADE_IMPACT_SERVICE}@g;" /root/%SHORT_VERSION%.x/upgrade-cse.txt
sed -i -e "s/%FROM_VERSION%/${FROM_VERSION}/" /root/%SHORT_VERSION%.x/upgrade-cse.txt

echo "Preparing to update from "$FROM_VERSION" to "$TO_VERSION" version."
FROM_VERSION_SHORT=$(echo ${FROM_VERSION} | cut -d'.' -f1,2)
sed -i 's/REPLACE/'"$FROM_VERSION_SHORT:$FROM_VERSION"'/g' /root/%SHORT_VERSION%.x/current_version.txt
serviced script run /root/%SHORT_VERSION%.x/current_version.txt --service Zenoss.cse

echo "Starting resmgr upgrade."
serviced script run /root/%SHORT_VERSION%.x/upgrade-cse.txt --service Zenoss.cse

/opt/serviced/bin/serviced-set-version Zenoss.cse %VERSION%

if [ "$RUN_GRAPH_UPDATE" = true ] ; then
    serviced service run zenimpactstate update
fi
