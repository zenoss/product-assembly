# This script can be used to upgrade a Zenoss deployment to a new image
#
# To minimize downtime and avoid potential out of space disk issues,
# preseed the master with the images (that the upgrade will automatically
# pull from the internet) before the upgrade maintenance window:
#   ssh MASTER
#   sudo docker pull gcr.io/zing-registry-188222/cse_%SHORT_VERSION%:%VERSION%  # about 10-20 minutes
#   sudo docker pull gcr.io/zing-registry-188222/otsdb-bigtable:%OTSDB_BIGTABLE_VERSION%  # about 5-10 minutes
#   sudo docker pull gcr.io/zing-registry-188222/zing-connector:%ZING_CONNECTOR_VERSION%  # about 7-15 minutes
#   sudo docker pull gcr.io/zing-registry-188222/api-key-proxy:%ZING_API_PROXY_VERSION%  # about 5-10 minutes
#   serviced docker sync  # about 10m:cse 5m:hbase 8m:opentsdb
#
# Run via 'serviced script run upgrade-cse.txt --service Zenoss.cse' and restart
# the deployment

###################################################################################
#
# PLEASE READ THE FOLLOWING!
#
# It is required that the entire Zenoss deployment be stopped prior to
# performing an upgrade with this script.
#
###################################################################################

DESCRIPTION Zenoss RM %VERSION% upgrade
VERSION cse-%VERSION%
REQUIRE_SVC
SNAPSHOT preupgrade-cse-%VERSION%

# Choose images to upgrade to
SVC_USE gcr.io/zing-registry-188222/cse_%SHORT_VERSION%:%VERSION%_%VERSION_TAG% zenoss/cse_7.0
SVC_USE gcr.io/zing-registry-188222/otsdb-bigtable:%OTSDB_BIGTABLE_VERSION%
SVC_USE gcr.io/zing-registry-188222/zing-connector:%ZING_CONNECTOR_VERSION%
SVC_USE gcr.io/zing-registry-188222/api-key-proxy:%ZING_API_PROXY_VERSION%
SVC_USE gcr.io/zing-registry-188222/mariadb:%VERSION%_%VERSION_TAG% zenoss/mariadb

# Stop Zenoss
SVC_STOP Zenoss.cse auto
SVC_WAIT Zenoss.cse stopped 600

# Add timeout here as a temporary workaround for unknown issue when 
# underlying SVC_EXEC commands running using old images or old service definitions
SVC_EXEC NO_COMMIT "Zenoss.cse" sleep 120

# Run the service migrations
SVC_EXEC NO_COMMIT "Zenoss.cse" runuser -l zenoss -c /"opt/zenoss/bin/zensvcmigrate --from %FROM_VERSION%"

# Run impact upgrade if we upgrade from Impact < $UPGRADE_IMPACT_VERSION
%UPGRADE_IMPACT_SERVICE%

# Run mariadb migration if mariadb services are not using the mariadb image
# - override image for mariadb services to a new one
# - start mariadb services and run mysql_upgrade
%MIGRATE_MARIADB_SERVICES%

# Run mysql_upgrade
SVC_EXEC NO_COMMIT Zenoss.cse/Infrastructure/mariadb-model /opt/zenoss/bin/upgrade_database.sh mariadb-model
SVC_EXEC NO_COMMIT Zenoss.cse/Infrastructure/mariadb-events /opt/zenoss/bin/upgrade_database.sh mariadb-events

# Start all our dependent services
SVC_START Zenoss.cse/Infrastructure/Impact
SVC_START Zenoss.cse/Infrastructure/solr
SVC_START Zenoss.cse/Infrastructure/mariadb-model
SVC_START Zenoss.cse/Infrastructure/mariadb-events
SVC_START Zenoss.cse/Infrastructure/RabbitMQ
SVC_START Zenoss.cse/Zenoss/Events/zeneventserver
SVC_START Zenoss.cse/Infrastructure/redis
SVC_START Zenoss.cse/Infrastructure/memcached

# Wait for our services to start
SVC_WAIT Zenoss.cse/Infrastructure/mariadb-model Zenoss.cse/Infrastructure/mariadb-events Zenoss.cse/Infrastructure/RabbitMQ Zenoss.cse/Zenoss/Events/zeneventserver Zenoss.cse/Infrastructure/redis Zenoss.cse/Infrastructure/memcached Zenoss.cse/Infrastructure/solr Zenoss.cse/Infrastructure/Impact started 1200

# Run the upgrade 'run'
SVC_RUN "Zenoss.cse/Zenoss/User Interface/Zope" upgrade

# Uncomment this to restart the entire application afterwards
# SVC_RESTART Zenoss.cse auto

# Uncomment this if you have run the install_quilt script first, and are using
# quilt (based in /opt/zenoss) to manage patches
# SVC_RUN "Zenoss.cse/Zenoss/User Interface/Zope" apply-custom-patches
